{"version":3,"file":"ExpoLink.js","sourceRoot":"","sources":["../../src/link/ExpoLink.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAab,4BA0BC;AArCD,oEAAuC;AACvC,+CAAgG;AAChG,+CAA0C;AAE1C,6DAA0D;AAC1D,uDAAoD;AACpD,yCAAgE;AAChE,uEAA6D;AAE7D,sCAAoD;AAEpD,SAAgB,QAAQ,CAAC,KAAgB;IACvC,MAAM,SAAS,GAAG,IAAA,kCAAY,GAAE,CAAC;IACjC,IACE,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK;QAC7B,iBAAiB,CAAC,KAAK,CAAC;QACxB,CAAC,SAAS;QACV,wBAAS,EAAE,UAAU,EAAE,cAAc,KAAK,KAAK,EAC/C,CAAC;QACD,OAAO,CAAC,iCAAe,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;IACxC,CAAC;IACD,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;IAClD,IAAI,eAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACvC,MAAM,aAAa,GAAG,eAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAC3D,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAA,sBAAc,EAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,sBAAW,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAQ,CAAC,CAC7F,CAAC;QACF,QAAQ,GAAG,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IACtE,CAAC;SAAM,CAAC;QACN,IAAI,IAAA,sBAAc,EAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI,KAAK,sBAAW,EAAE,CAAC;YAC9D,MAAM,OAAO,GAAG,QAA4D,CAAC;YAC7E,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClC,KAAK,GAAG,yBAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YACzD,OAAO,GAAG,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QACpE,CAAC;IACH,CAAC;IAED,OAAO,CAAC,uCAAkB,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAG,CAAC;AAC9F,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAgB;IACzC,MAAM,UAAU,GAAG,IAAA,0BAAoB,EAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,OAAO,gBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC1C,CAAC,KAAK,EAAE,EAAE,CACR,IAAA,sBAAc,EAAC,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAW,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,mBAAQ,CAAC,CAC3E,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport Constants from 'expo-constants';\nimport React, { Children, isValidElement, type ComponentProps, type ReactElement } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport { LinkWithPreview } from './LinkWithPreview';\nimport { LinkMenu, LinkPreview, LinkTrigger } from './elements';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { LinkProps } from './useLinkHooks';\nimport { shouldLinkExternally } from '../utils/url';\n\nexport function ExpoLink(props: LinkProps) {\n  const isPreview = useIsPreview();\n  if (\n    process.env.EXPO_OS === 'ios' &&\n    isLinkWithPreview(props) &&\n    !isPreview &&\n    Constants?.expoConfig?.newArchEnabled !== false\n  ) {\n    return <LinkWithPreview {...props} />;\n  }\n  let { children, asChild, style, ...rest } = props;\n  if (React.Children.count(children) > 1) {\n    const arrayChildren = React.Children.toArray(children).filter(\n      (child) => !isValidElement(child) || (child.type !== LinkPreview && child.type !== LinkMenu)\n    );\n    children = arrayChildren.length === 1 ? arrayChildren[0] : children;\n  } else {\n    if (isValidElement(children) && children.type === LinkTrigger) {\n      const trigger = children as ReactElement<ComponentProps<typeof LinkTrigger>>;\n      children = trigger.props.children;\n      style = StyleSheet.flatten([trigger.props.style, style]);\n      asChild = asChild === undefined ? trigger.props.asChild : asChild;\n    }\n  }\n\n  return <BaseExpoRouterLink {...rest} style={style} asChild={asChild} children={children} />;\n}\n\nfunction isLinkWithPreview(props: LinkProps): boolean {\n  const isExternal = shouldLinkExternally(String(props.href));\n  return Children.toArray(props.children).some(\n    (child) =>\n      isValidElement(child) &&\n      ((!isExternal && child.type === LinkPreview) || child.type === LinkMenu)\n  );\n}\n"]}