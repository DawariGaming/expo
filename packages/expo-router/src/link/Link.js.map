{"version":3,"file":"Link.js","sourceRoot":"","sources":["Link.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAGrC,MAAM,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM;AAC/B;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAS,IAAI,CAAC,KAAgB;IAC5B,8EAA8E;IAC9E,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AACjC,CAAC,EACD;IACE,WAAW;IACX,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,WAAW;IACpB,UAAU,EAAE,cAAc;CAC3B,CACF,CAAC;AAKF,OAAO,EAAE,QAAQ,EAAiB,MAAM,YAAY,CAAC","sourcesContent":["import { ExpoLink } from './ExpoLink';\nimport { LinkMenu, LinkMenuAction, LinkPreview, LinkTrigger } from './elements';\nimport { resolveHref } from './href';\nimport type { LinkProps, WebAnchorProps } from './useLinkHooks';\n\nexport const Link = Object.assign(\n  /**\n   * Component that renders a link using [`href`](#href) to another route.\n   * By default, it accepts children and wraps them in a `<Text>` component.\n   *\n   * Uses an anchor tag (`<a>`) on web and performs a client-side navigation to preserve\n   * the state of the website and navigate faster. The web-only attributes such as `target`,\n   * `rel`, and `download` are supported and passed to the anchor tag on web. See\n   * [`WebAnchorProps`](#webanchorprops) for more details.\n   *\n   * > **Note**: Client-side navigation works with both single-page apps,\n   * and [static-rendering](/router/reference/static-rendering/).\n   *\n   * @example\n   * ```tsx\n   * import { Link } from 'expo-router';\n   * import { View } from 'react-native';\n   *\n   * export default function Route() {\n   *  return (\n   *   <View>\n   *    <Link href=\"/about\">About</Link>\n   *   </View>\n   *  );\n   *}\n   * ```\n   */\n  function Link(props: LinkProps) {\n    // Re-exporting ExpoLink here so that Link.* can be used in server components.\n    return <ExpoLink {...props} />;\n  },\n  {\n    resolveHref,\n    Menu: LinkMenu,\n    Trigger: LinkTrigger,\n    Preview: LinkPreview,\n    MenuAction: LinkMenuAction,\n  }\n);\n\nexport type LinkComponent = typeof Link;\n\nexport { LinkProps, WebAnchorProps };\nexport { Redirect, RedirectProps } from './Redirect';\n"]}