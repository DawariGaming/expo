{"version":3,"file":"LinkPreviewContext.js","sourceRoot":"","sources":["LinkPreviewContext.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAqB,GAAG,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAExE,MAAM,kBAAkB,GAAG,aAAa,CAOtC,SAAS,CAAC,CAAC;AAEb,MAAM,UAAU,0BAA0B,CAAC,EAAE,QAAQ,EAAqB;IACxE,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,CAAqB,SAAS,CAAC,CAAC;IACpF,MAAM,wBAAwB,GAAG,cAAc,KAAK,SAAS,CAAC;IAC9D,OAAO,CACL,CAAC,kBAAkB,CAAC,QAAQ,CAC1B,KAAK,CAAC,CAAC,EAAE,wBAAwB,EAAE,cAAc,EAAE,iBAAiB,EAAE,CAAC,CACvE;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAC/B,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,MAAM,OAAO,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACxC,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CACb,8GAA8G,CAC/G,CAAC;IACJ,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import { createContext, PropsWithChildren, use, useState } from 'react';\n\nconst LinkPreviewContext = createContext<\n  | {\n      isStackAnimationDisabled: boolean;\n      openPreviewKey: string | undefined;\n      setOpenPreviewKey: (openPreviewKey: string | undefined) => void;\n    }\n  | undefined\n>(undefined);\n\nexport function LinkPreviewContextProvider({ children }: PropsWithChildren) {\n  const [openPreviewKey, setOpenPreviewKey] = useState<string | undefined>(undefined);\n  const isStackAnimationDisabled = openPreviewKey !== undefined;\n  return (\n    <LinkPreviewContext.Provider\n      value={{ isStackAnimationDisabled, openPreviewKey, setOpenPreviewKey }}>\n      {children}\n    </LinkPreviewContext.Provider>\n  );\n}\n\nexport const useLinkPreviewContext = () => {\n  const context = use(LinkPreviewContext);\n  if (context == null) {\n    throw new Error(\n      'useLinkPreviewContext must be used within a LinkPreviewContextProvider. This is likely a bug in Expo Router.'\n    );\n  }\n  return context;\n};\n"]}