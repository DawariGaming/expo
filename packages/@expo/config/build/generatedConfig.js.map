{"version":3,"file":"generatedConfig.js","names":["_fs","data","_interopRequireDefault","require","_getenv","_path","e","__esModule","default","debug","withInternalGeneratedConfig","projectRoot","config","safeLoadGeneratedConfig","generatedPath","rawGenerated","fs","readFileSync","JSON","parse","generatedConfigs","path","join","string","filter","Boolean","length","generated","generatedOrigin","extra","router","getGeneratedConfigPath","boolish","appendShallowGeneratedConfig","appendedValues","generatedConfigPath","generatedConfig","rawGeneratedConfig","updatedGeneratedConfig","mkdirSync","dirname","recursive","writeFileSync","stringify","error"],"sources":["../src/generatedConfig.ts"],"sourcesContent":["import fs from 'fs';\nimport { boolish, string } from 'getenv';\nimport path from 'path';\n\nimport { ExpoConfig } from './Config.types';\n\nconst debug = require('debug')('expo:config:generated');\n\nexport function withInternalGeneratedConfig(projectRoot: string, config: ExpoConfig): ExpoConfig {\n  const safeLoadGeneratedConfig = (generatedPath: string): Record<string, unknown> | null => {\n    if (!generatedPath) {\n      return null;\n    }\n\n    try {\n      const rawGenerated = fs.readFileSync(generatedPath, 'utf8');\n      return JSON.parse(rawGenerated);\n    } catch {\n      return null;\n    }\n  };\n\n  const generatedConfigs = [\n    safeLoadGeneratedConfig(path.join(projectRoot, '.expo', 'generated', `app.config.json`)),\n    safeLoadGeneratedConfig(string('__EXPO_GENERATED_CONFIG_PATH', '')),\n  ].filter(Boolean) as Record<string, unknown>[];\n\n  if (!generatedConfigs.length) {\n    return config;\n  }\n\n  for (const generated of generatedConfigs) {\n    const generatedOrigin = generated['expo.extra.router.generatedOrigin'];\n    if (typeof generatedOrigin === 'string') {\n      config.extra ??= {};\n      config.extra.router ??= {};\n      config.extra.router.generatedOrigin = generatedOrigin;\n    }\n  }\n\n  return config;\n}\n\nexport function getGeneratedConfigPath(projectRoot: string): string | null {\n  if (boolish('CI', false)) {\n    return path.join(projectRoot, '.expo', 'generated', `app.config.json`);\n  }\n\n  return string('__EXPO_GENERATED_CONFIG_PATH', '') || null;\n}\n\nexport function appendShallowGeneratedConfig(\n  appendedValues: Record<string, unknown>,\n  { projectRoot }: { projectRoot: string }\n): boolean {\n  const generatedConfigPath = getGeneratedConfigPath(projectRoot);\n\n  if (!generatedConfigPath) {\n    debug('No generated config path available.');\n    return false;\n  }\n\n  let generatedConfig: Record<string, unknown> = {};\n  try {\n    const rawGeneratedConfig = fs.readFileSync(generatedConfigPath, 'utf8');\n    generatedConfig = JSON.parse(rawGeneratedConfig);\n  } catch {}\n\n  const updatedGeneratedConfig = {\n    ...generatedConfig,\n    ...appendedValues,\n  };\n\n  try {\n    fs.mkdirSync(path.dirname(generatedConfigPath), { recursive: true });\n    fs.writeFileSync(generatedConfigPath, JSON.stringify(updatedGeneratedConfig), 'utf8');\n    return true;\n  } catch (error) {\n    debug('Failed to write generated config.', generatedConfigPath, error);\n  }\n\n  return false;\n}\n"],"mappings":"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","ignoreList":[]}