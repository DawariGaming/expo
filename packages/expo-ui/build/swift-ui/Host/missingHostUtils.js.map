{"version":3,"file":"missingHostUtils.js","sourceRoot":"","sources":["../../../src/swift-ui/Host/missingHostUtils.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAa,SAAS,EAAE,MAAM,OAAO,CAAC;AACrF,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAM1C,MAAM,oBAAoB,GAAyB;IACjD,uCAAuC,EAAE,IAAI;CAC9C,CAAC;AAEF,MAAM,UAAU,6BAA6B,CAAC,QAAmB;IAC/D,OAAO,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;QACtC,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1B,OAAO,YAAY,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QACnD,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,KAAU;IACtC,OAAO,CAAE,KAA8B,CAAC,uCAAuC,CAAC;AAClF,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAAgC;IACnE,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,CAAC,IAAI,CACV,kBAAkB,KAAK,CAAC,aAAa,uOAAuO,KAAK,CAAC,aAAa,kBAAkB,CAClT,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,OAAO,CACL,CAAC,IAAI,CACH,KAAK,CAAC,CAAC;YACL,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,KAAK;SACvB,CAAC,CACF;MAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAChD;uBAAe,CAAC,KAAK,CAAC,aAAa,CAAE;;MAEvC,EAAE,IAAI,CACR;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { Children, cloneElement, isValidElement, ReactNode, useEffect } from 'react';\nimport { View, Text } from 'react-native';\n\ntype SwiftUINestingMarker = {\n  __expo_isDirectlyInsideSwiftUIHierarchy: boolean;\n};\n\nconst swiftUINestingMarker: SwiftUINestingMarker = {\n  __expo_isDirectlyInsideSwiftUIHierarchy: true,\n};\n\nexport function markChildrenAsNestedInSwiftUI(children: ReactNode): ReactNode {\n  return Children.map(children, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement(child, swiftUINestingMarker);\n    }\n    return child;\n  });\n}\n\nexport function isMissingHost(props: any) {\n  return !(props as SwiftUINestingMarker).__expo_isDirectlyInsideSwiftUIHierarchy;\n}\n\nexport function MissingHostErrorView(props: { componentName: string }) {\n  useEffect(() => {\n    console.warn(\n      `A SwiftUI view ${props.componentName} is inserted as a child of a standard UIView.\\nDouble check that in JSX you have wrapped your component with <Host> from '@expo/ui/swift-ui'.\\n\\nimport { Host } from '@expo/ui/swift-ui'\\n\\n<Host matchContents style={ ... }>\\n  <${props.componentName} ... />\\n</Host>`\n    );\n  }, []);\n  return (\n    <View\n      style={{\n        flex: 1,\n        minWidth: 120,\n        minHeight: 70,\n        backgroundColor: 'red',\n      }}>\n      <Text style={{ fontWeight: 'bold', fontSize: 11 }}>\n        A SwiftUI view {props.componentName} is inserted as a child of a standard UIView. More info\n        in console.\n      </Text>\n    </View>\n  );\n}\n"]}